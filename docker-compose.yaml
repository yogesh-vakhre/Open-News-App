networks:
  open_news_enviroment:

services:
  
  frontend:
    build:
      context: ./app-frontend 
    ports:
      - "80:80"
    networks:
      - open_news_enviroment
  backend:
    # image: 'nginx:stable-alpine'
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - 8080:80    
    volumes:
      - ./app-backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    container_name: open_news_enviroment_server
    networks:
      - open_news_enviroment
    # extra_hosts:
    #  - "host.docker.internal:host-gateway"
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./app-backend:/var/www/html:delegated
    container_name: php_open_news_enviroment
    networks:
      - open_news_enviroment
  mysql:
    image: mysql:8.0.1
    restart: unless-stopped
    tty: true
    container_name: mysql_open_news_enviroment
    env_file:
      - mysql/.env
    ports:
      - 3306:3306
    networks:
      - open_news_enviroment
    volumes:
      - /opt/mysql_data:/var/lib/mysql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    container_name: phpmyadmin_open_news_enviroment
    depends_on:
      - mysql
    ports:
      - '8891:80'
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=secret
    networks:
      - open_news_enviroment
  redis:
    image: redis:alpine
    container_name: redis_open_news_enviroment
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - open_news_enviroment
    command: redis-server --appendonly yes --replica-read-only no

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./app-backend:/var/www/html
    depends_on:
      - php
    networks:
      - open_news_enviroment
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./app-backend:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
      #depends_on:
    #- mysql
    networks:
      - open_news_enviroment
  # scheduler:
  #   build:
  #     context: .
  #     dockerfile: dockerfiles/php.dockerfile
  #   container_name: scheduler_open_news_enviroment
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   entrypoint: [ "php", "artisan", "schedule:work" ]
  #   networks:
  #     - open_news_enviroment
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog_open_news_enviroment
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - open_news_enviroment

